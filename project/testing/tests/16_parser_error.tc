// TINYC TEST
// INFO: Program with a parsing error (should produce an error node)
// RESULT: {"nodeType":"ErrorProgram","errorType":"parser","message":"../examples/16_parser_error.tc:10:26: Expected type (int, double, char, void, struct, or identifier)","declarations":[{"nodeType":"StructDeclaration","identifier":"Point","fields":[],"location":{"filename":"../examples/16_parser_error.tc","line":3,"column":1}},{"nodeType":"StructDefinition","identifier":"Point","fields":[{"nodeType":"VariableDeclaration","identifier":"x","type":{"nodeType":"PrimitiveType","kind":"int","location":{"filename":"../examples/16_parser_error.tc","line":6,"column":5}},"location":{"filename":"../examples/16_parser_error.tc","line":6,"column":9}},{"nodeType":"VariableDeclaration","identifier":"y","type":{"nodeType":"PrimitiveType","kind":"int","location":{"filename":"../examples/16_parser_error.tc","line":7,"column":5}},"location":{"filename":"../examples/16_parser_error.tc","line":7,"column":9}}],"location":{"filename":"../examples/16_parser_error.tc","line":5,"column":1}}],"location":{"filename":"../examples/16_parser_error.tc","line":10,"column":26}}

struct Point;

struct Point {
    int x;
    int y;
};

int dotProduct(Point p1, struct Point p2) {
    return p1.x * p2.x + p1.y * p2.y;
}

int main() {
    Point p1;
    Point p2;
    p1.x = 1;
    p1.y = 2;
    p2.x = 3 // Missing semicolon
    p2.y = 4;
    int result = dotProduct(p1, p2);
    return result;
}
